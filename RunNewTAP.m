% Function that runs the TAP algo with new set of coefficients learnt from
% data. This is to check if there are families of coefficients that have
% the same dynamics.

% inputs: rinit, hmat, coefficients
% do it for just the one session now

% looking at only the first session now
hh = 1;
rinit = rMat(:,1,hh); 
% rinit = rTestMat(:,1); 

% K = KTrue;
% J = JTrue;

load Data/Khat_Scaled.mat
K = Khat;
J = JTrue;
 
% Khat    = Phat(1:27);
% JhatVec = Phat(28:end);
% K       = Khat;
% J       = JVecToMat(JhatVec);

J0 = J.^0;
J1 = J.^1;
J2 = J.^2;

rNewMat  = zeros(NVars,N_T);

hVec    = hMat(:,hh);
% hVec    = hTest;
rOld    = rinit; % Initialize 
r       = zeros(NVars,1);

for nIter = 1:N_T
    for V = 1:NVars
        inp = hVec(V) + K(1)*(rOld(V)^0)*J0(:,V)'*(rOld.^0) ...
                      + K(2)*(rOld(V)^0)*J0(:,V)'*(rOld.^1) ...
                      + K(3)*(rOld(V)^0)*J0(:,V)'*(rOld.^2) ...
                      + K(4)*(rOld(V)^1)*J0(:,V)'*(rOld.^0) ...
                      + K(5)*(rOld(V)^1)*J0(:,V)'*(rOld.^1) ...
                      + K(6)*(rOld(V)^1)*J0(:,V)'*(rOld.^2) ...
                      + K(7)*(rOld(V)^2)*J0(:,V)'*(rOld.^0) ...
                      + K(8)*(rOld(V)^2)*J0(:,V)'*(rOld.^1) ...
                      + K(9)*(rOld(V)^2)*J0(:,V)'*(rOld.^2) ...
                      + K(10)*(rOld(V)^0)*J1(:,V)'*(rOld.^0) ...
                      + K(11)*(rOld(V)^0)*J1(:,V)'*(rOld.^1) ...
                      + K(12)*(rOld(V)^0)*J1(:,V)'*(rOld.^2) ...
                      + K(13)*(rOld(V)^1)*J1(:,V)'*(rOld.^0) ...
                      + K(14)*(rOld(V)^1)*J1(:,V)'*(rOld.^1) ...
                      + K(15)*(rOld(V)^1)*J1(:,V)'*(rOld.^2) ...
                      + K(16)*(rOld(V)^2)*J1(:,V)'*(rOld.^0) ...
                      + K(17)*(rOld(V)^2)*J1(:,V)'*(rOld.^1) ...
                      + K(18)*(rOld(V)^2)*J1(:,V)'*(rOld.^2) ...
                      + K(19)*(rOld(V)^0)*J2(:,V)'*(rOld.^0) ...
                      + K(20)*(rOld(V)^0)*J2(:,V)'*(rOld.^1) ...
                      + K(21)*(rOld(V)^0)*J2(:,V)'*(rOld.^2) ...
                      + K(22)*(rOld(V)^1)*J2(:,V)'*(rOld.^0) ...
                      + K(23)*(rOld(V)^1)*J2(:,V)'*(rOld.^1) ...
                      + K(24)*(rOld(V)^1)*J2(:,V)'*(rOld.^2) ...
                      + K(25)*(rOld(V)^2)*J2(:,V)'*(rOld.^0) ...
                      + K(26)*(rOld(V)^2)*J2(:,V)'*(rOld.^1) ...
                      + K(27)*(rOld(V)^2)*J2(:,V)'*(rOld.^2);

        r(V) = (1-lam)*rOld(V) + lam/(1+exp(-inp));
    end
    rNewMat(:,nIter) = r;
    rOld = r;
end

% figure; plot(rNewMat(:,1:end-1)','bx-')
% hold on
% plot(rMat(:,2:end,hh)','ro-')

% figure; plot(K,'bx-'); hold on; plot(KTrue,'ro-')
% figure; plot(JhatVec,'bx-'); hold on; plot(JTrueVec,'ro-')

% figure; plot(rNewMat(1,1:end-1)','bx-')
% hold on
% plot(rMat(1,2:end,hh)','ro-')

